name: codspeed

on:
  push:
    branches:
      - main
  pull_request:
  # `workflow_dispatch` allows CodSpeed to trigger backtest
  # performance analysis in order to generate initial data.
  workflow_dispatch:

env:
  UV_FROZEN: true

jobs:
  codspeed-profiling:
    name: CodSpeed profiling
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      # Using this action is still necessary for CodSpeed to work:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - id: core-version
        name: resolve pydantic-core tag
        run: |
          set -uex -o pipefail

          echo core-ref=$(python -c "
          import re
          import tomllib

          pyproject_toml = tomllib.loads(open('pyproject.toml').read())
          core = next(d for d in pyproject_toml['project']['dependencies'] if d.startswith('pydantic-core'))

          if (result := re.search(r'==(.+)', core)) is not None:
            print(f'v{result.group(1)}')
          elif (result := re.search(r'@ git\+https://github\.com/pydantic/pydantic-core\.git@(.+)', core)) is not None:
            print(result.group(1))
          else:
            raise RuntimeError('Could not resolve pydantic-core ref')
          ") >> $GITHUB_OUTPUT

      - name: install deps
        run: uv sync --python 3.12 --group testing-extra --extra email --frozen

      - name: checkout pydantic-core
        uses: actions/checkout@v4
        with:
          repository: pydantic/pydantic-core
          ref: ${{ steps.core-version.outputs.core-ref }}
          path: pydantic-core

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools

      - name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: pydantic-core

      - name: install pydantic-core dependencies
        run: |
          ln -s ../.venv .venv  # link pydantic-core uv venv to the pydantic one
          uv sync --inexact --group testing
          uv pip uninstall pytest-speed
        working-directory: pydantic-core

      - name: Compile pydantic-core for profiling
        run: make build-profiling
        working-directory: pydantic-core
        env:
          CONST_RANDOM_SEED: 0 # Fix the compile time RNG seed
          RUSTFLAGS: "-Cprofile-generate=${{ github.workspace }}/profdata"

      - name: Gather pgo data
        run: uv run pytest tests/benchmarks
        working-directory: pydantic-core

      - name: Prepare merged pgo data
        run: rustup run stable bash -c '$RUSTUP_HOME/toolchains/$RUSTUP_TOOLCHAIN/lib/rustlib/x86_64-unknown-linux-gnu/bin/llvm-profdata merge -o ${{ github.workspace }}/merged.profdata ${{ github.workspace }}/profdata'
        working-directory: pydantic-core

      - name: Compile pydantic-core for benchmarking
        run: make build-profiling
        working-directory: pydantic-core
        env:
          CONST_RANDOM_SEED: 0 # Fix the compile time RNG seed
          RUSTFLAGS: "-Cprofile-use=${{ github.workspace }}/merged.profdata"

      - name: Run CodSpeed benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: uv run --no-sync pytest ./tests/benchmarks --codspeed
